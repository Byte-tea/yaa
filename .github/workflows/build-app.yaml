name: 编译客户端

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-app.yaml'
      - 'client/**'

concurrency:
  group: "client"
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
  build-app:
    name: 编译客户端（${{ matrix.os }}）
    runs-on: ${{ matrix.os }}
    env:
      HTML_PATH: './client/index.html'
      NAME: 'yaa'
      ICON: './assets/yaa_512.png'
      INSTALLER_LANGUAGE: zh-CN
      TARGETS: 'appimage'
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
          - build: windows
            os: windows-latest
          - build: macos
            os: macos-latest

    steps:

      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 为 ubuntu-latest 安装 Rust
        if: inputs.platform == 'ubuntu-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl

      - name: 为 windows-latest 安装 Rust
        if: inputs.platform == 'windows-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable-x86_64-msvc
          target: x86_64-pc-windows-msvc

      - name: 为 macos-latest 安装 Rust
        if: inputs.platform == 'macos-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: x86_64-apple-darwin

      - name: 安装依赖（仅 Ubuntu 需）
        if: inputs.platform == 'ubuntu-24.04'
        uses: awalsh128/cache-apt-pkgs-action@v1.4.3
        with:
          packages: libsoup3.0-dev libdbus-1-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev gnome-video-effects gnome-video-effects-extra
          version: 1.1
      
      - name: 安装 pake-cli
        run: |
          npm install pake-cli

      - name: 恢复 Rust 缓存
        uses: actions/cache/restore@v3
        id: cache_store
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            node_modules/pake-cli/src-tauri/target/
          key: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}

      - name: 安装依赖
        run: |
          npm install shelljs
          npm install axios

      - name: 编译客户端
        run: |
          node ./script/build_with_pake_cli.js
        env:
          URL: ${{ env.HTML_PATH }}
          NAME: ${{ env.NAME }}
          ICON: ${{ env.ICON }}
          HEIGHT: '780'
          WIDTH: '1200'
          HIDE_TITLE_BAR: false
          FULLSCREEN: false
          MULTI_ARCH: false
          TARGETS: ${{ env.TARGETS }}
          PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig
          PKG_CONFIG_ALLOW_SYSTEM_LIBS: 1
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS: 1

      - name: 上传包
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ inputs.platform }}.zip
          path: node_modules/pake-cli/output/*
          retention-days: 3

      - name: 保存 Rust 缓存
        uses: actions/cache/save@v3
        if: steps.cache_store.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            node_modules/pake-cli/src-tauri/target/
          key: ${{ inputs.platform }}-cargo-${{ hashFiles('node_modules/pake-cli/src-tauri/Cargo.lock') }}